class MatrixPrefixSum {
  long[][] dp;

  MatrixPrefixSum(int[][] mat) {
    int n = mat.length, m = mat[0].length;
    dp = new long[n][m];
    for (int i = 0; i < n; ++i) {
      long prev = 0;
      for (int j = 0; j < m; ++j) {
        dp[i][j] = prev + mat[i][j];
        prev += mat[i][j];
      }
    }
    for (int i = 0; i < m; ++i) {
      long prev = 0;
      for (int j = 0; j < n; ++j) {
        dp[j][i] += (prev);
        prev = dp[j][i];
      }
    }
  }

  long query(int r1, int c1, int r2, int c2) {
    long res = dp[r2][c2];
    if (r1 - 1 >= 0) res -= dp[r1 - 1][c2];
    if (c1 - 1 >= 0) res -= dp[r2][c1 - 1];
    if (r1 - 1 >= 0 && c1 - 1 >= 0) res += dp[r1 - 1][c1 - 1];
    return res;
  }
}
